$csMobile: 40vh;
$csDesk: 30vw;
$catMobile: 100vw;
$catDesk: 30vw;


.collection{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

.model{
    // width: inherit;
    cursor: pointer;
    width: inherit;
    //background-color: lightblue;
    // position: relative;
}

@media only screen and (max-width: 1000px) {
    .model{
        width: 100%;
        // height: 40vh;
    }
}



.modelBox{
    // to center on mobile
    // position: relative;
    // display: flex;
    // flex-direction: column;
    // width: 96vw;
    // align-items: center;
    // background-color: red;
    position: relative;
    // width: inherit;
}

@media only screen and (max-width: 1000px) {
    .modelBox{
        // not pos rel allows loaders to show, idk why
        position: static;
        display: flex;
        flex-direction: column;
        width: 100%; //96vw;
        // height: 60vh;
        align-items: center;
        // background-color: red;
    }
}

// SETTING UP MODEL SIZE -- needs to match loader size and is dif in all 4 cases

// in case study
.canvasBoxCS{
    width: $csDesk;
    height: $csDesk;
}

// in catalogue
.canvasBoxCat{
    width: $catDesk;
    height: $catDesk;
}

@media only screen and (max-width: 1000px){
    .canvasBoxCS{
        height: $csMobile;
        width: $csMobile;
    }

    .canvasBoxCat{
        width: $catMobile;
        height: $catMobile;
    }
}

// same as above but for loader

%loader-shared{
    background-color: var(--background-color);
    //background-color: lightgreen;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    z-index: 1000;
}

.loaderCS{
    @extend %loader-shared;
    width: $csDesk;
    height: $csDesk;
}

.loaderCat{
    @extend %loader-shared;
    width: $catDesk;
    height: $catDesk;
}
    
@media only screen and (max-width: 1000px){
    .loaderCS{
        height: $csMobile;
        width: $csMobile;
    }
    
    .loaderCat{
        height: $catMobile;
        width: $catMobile;
    }
}

.loaderIcon{
    background-color: var(--background-color);
}

.wholePage{
    position: fixed;
    top: 0vh;
    left: 0vh;
    width: 100vw;
    height: 100vh;
    background-color: none;
    pointer-events: none;
}

.overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    overflow: hidden;
  }

.caseStudyBox{
    position: fixed;
    top: 5vh;
    left: 10%;
    width: 80%;
    height: 90vh;
    border: 1px solid var(--font-color);
    background-color: var(--background-color);
    // pointer-events: auto;
}

.close{
    width: 40px;
    height: 3vh;
    padding: 15px;
    transform: rotate(45deg);
    cursor: pointer;
}

.hoverName{
    position: absolute;
    top: 30px;
    left: 30px;
    background-color: var(--background-color);
    border: 1px var(--font-color) solid;
    z-index: 100000;
    padding: 3px;
}

@media only screen and (max-width: 1000px){
    // no need for hover name on mobile
    .hoverName{
        display: none;
    }
}